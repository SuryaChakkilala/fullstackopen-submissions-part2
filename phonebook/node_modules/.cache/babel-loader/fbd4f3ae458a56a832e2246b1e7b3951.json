{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surya\\\\Desktop\\\\part2\\\\phonebook\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport personService from './persons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Filter = _ref => {\n  let {\n    handleFilter\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"search name in the phonebook: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Filter;\n\nconst Notification = _ref2 => {\n  let {\n    message\n  } = _ref2;\n\n  if (message === null) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: message.type === \"error\" ? \"error\" : \"notification\",\n    children: message.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Notification;\n\nconst PersonForm = _ref3 => {\n  let {\n    addEntry,\n    newName,\n    handleNameChange,\n    newNumber,\n    handleNumberChange\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: addEntry,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newName,\n        onChange: handleNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"number: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNumber,\n        onChange: handleNumberChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n};\n\n_c3 = PersonForm;\n\nconst Persons = _ref4 => {\n  let {\n    newFilter,\n    persons,\n    deleteContact\n  } = _ref4;\n  const personsFiltered = persons.filter(person => {\n    return person.name.toLowerCase().includes(newFilter.toLowerCase());\n  });\n  const personsToShow = newFilter.length === 0 ? persons : personsFiltered;\n  const displayPersons = personsToShow.map(person => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [person.name, \" \", person.number, /*#__PURE__*/_jsxDEV(\"button\", {\n      name: person.name,\n      id: person.id,\n      onClick: deleteContact,\n      children: \" delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this)]\n  }, person.name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: displayPersons\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }, this);\n};\n\n_c4 = Persons;\n\nfunction App() {\n  _s();\n\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [newFilter, setNewFilter] = useState('');\n  const [notificationMessage, setNotificationMessage] = useState(null);\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const handleFilter = event => {\n    setNewFilter(event.target.value);\n  };\n\n  const deleteContact = e => {\n    const id = e.target.id;\n    const name = e.target.name;\n    const msg = `Do you really want to delete ${name}?`;\n\n    if (window.confirm(msg) === true) {\n      personService.deletePerson(id).then(deletedPerson => {\n        setNotificationMessage({\n          \"text\": `${name} was removed from server`,\n          \"type\": \"error\"\n        });\n        setTimeout(() => {\n          setNotificationMessage(null);\n        }, 5000);\n        setPersons(persons.filter(person => person.id !== id));\n      }).catch(error => {\n        setNotificationMessage({\n          \"text\": `${name} was already removed from server`,\n          \"type\": \"error\"\n        });\n        setTimeout(() => {\n          setNotificationMessage(null);\n        }, 5000);\n        setPersons(persons.filter(person => person.id !== id));\n      });\n    }\n  };\n\n  const findPerson = () => {\n    const name = newName;\n    return persons.some(person => person.name.toLowerCase() === name.toLowerCase());\n  };\n\n  const duplicateContact = persons.find(p => p.name === newName);\n\n  const addEntry = event => {\n    event.preventDefault();\n\n    if (duplicateContact) {\n      const msg = `${duplicateContact.name} is already added to phonebook, replace the old number with a new one?`;\n\n      if (window.confirm(msg) === true) {\n        personService.update(duplicateContact.id, {\n          name: newName,\n          number: newNumber\n        }).then(updatedPerson => {\n          setNotificationMessage({\n            \"text\": ` ${duplicateContact.name}'s number is now updated`,\n            \"type\": \"notification\"\n          });\n          setTimeout(() => {\n            setNotificationMessage(null);\n          }, 5000);\n          setPersons(persons.map(person => person.id !== updatedPerson.id ? person : updatedPerson));\n          setNewName('');\n          setNewNumber('');\n        }).catch(error => {\n          setNotificationMessage({\n            \"text\": `${error.response.data.error}`,\n            \"type\": \"error\"\n          });\n          setTimeout(() => {\n            setNotificationMessage(null);\n          }, 5000);\n        });\n      }\n    } else if (newName.length > 0 && newNumber.length > 0) {\n      personService.create({\n        name: newName,\n        number: newNumber\n      }).then(returnedPerson => {\n        setNotificationMessage({\n          text: `${returnedPerson.name} is now in your phonebook`,\n          type: \"notification\"\n        });\n        setTimeout(() => {\n          setNotificationMessage(null);\n        }, 5000);\n        setPersons(persons.concat(returnedPerson));\n        setNewName('');\n        setNewNumber('');\n      }).catch(error => {\n        setNotificationMessage({\n          \"text\": ` ${error.response.data.error}`,\n          \"type\": \"error\"\n        });\n        setTimeout(() => {\n          setNotificationMessage(null);\n        }, 5000);\n      } // console.log(error.response.data)\n      );\n    } else {\n      alert(\"please complete the name and the number field\");\n    }\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), notificationMessage !== null ? /*#__PURE__*/_jsxDEV(Notification, {\n      message: notificationMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 40\n    }, this) : null, /*#__PURE__*/_jsxDEV(Filter, {\n      handleFilter: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"add a new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n      addEntry: addEntry,\n      newName: newName,\n      handleNameChange: handleNameChange,\n      newNumber: newNumber,\n      handleNumberChange: handleNumberChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      newFilter: newFilter,\n      persons: persons,\n      deleteContact: deleteContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"nCRdXTZLGyvz2/NYFKBPjak6FWE=\");\n\n_c5 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Filter\");\n$RefreshReg$(_c2, \"Notification\");\n$RefreshReg$(_c3, \"PersonForm\");\n$RefreshReg$(_c4, \"Persons\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["C:/Users/surya/Desktop/part2/phonebook/src/App.js"],"names":["useState","useEffect","personService","Filter","handleFilter","Notification","message","type","text","PersonForm","addEntry","newName","handleNameChange","newNumber","handleNumberChange","Persons","newFilter","persons","deleteContact","personsFiltered","filter","person","name","toLowerCase","includes","personsToShow","length","displayPersons","map","number","id","App","setPersons","setNewName","setNewNumber","setNewFilter","notificationMessage","setNotificationMessage","getAll","then","initialPersons","event","target","value","e","msg","window","confirm","deletePerson","deletedPerson","setTimeout","catch","error","findPerson","some","duplicateContact","find","p","preventDefault","update","updatedPerson","response","data","create","returnedPerson","concat","alert"],"mappings":"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","sourcesContent":["import './App.css';\nimport {useState, useEffect} from 'react'\nimport personService from './persons'\n\nconst Filter = ({handleFilter}) => (\n  <div>search name in the phonebook: <input onChange={handleFilter}/></div>\n) \n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={ message.type === \"error\" ? \"error\" : \"notification\" }>\n      {message.text}\n    </div>\n  )\n}\n\nconst PersonForm = ({ addEntry, newName, handleNameChange, newNumber, handleNumberChange}) => (\n\n  <form onSubmit={addEntry}>\n        <div>\n          name: <input  value={newName}\n          onChange={handleNameChange}/>\n        </div> \n        \n        <div>\n          number: <input  value={newNumber}\n          onChange={handleNumberChange}/>\n        </div>\n        \n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n)\n\nconst Persons = ({newFilter, persons, deleteContact}) => {\n  \n  const personsFiltered = persons.filter(person => {\n      return person.name.toLowerCase().includes(newFilter.toLowerCase())\n  })\n  \n  const personsToShow = newFilter.length === 0 ? persons : personsFiltered\n\n  const displayPersons = personsToShow.map(person =>\n      <div key={person.name}>\n           {person.name} {person.number} \n\n          <button name={ person.name } \n                  id={ person.id }\n                  onClick={ deleteContact }> delete</button>\n           \n           </div>\n  )    \n  \n  return (\n      <div>{displayPersons}</div>\n  )\n}\n\nfunction App() {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ notificationMessage, setNotificationMessage] = useState(null)\n  \nuseEffect(() => {\n    personService\n    .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n    }, [])\n\n    const handleFilter = (event) => {\n      setNewFilter(event.target.value)\n  }    \n\n    const deleteContact = (e) => {\n      const id = e.target.id\n      const name = e.target.name\n      const msg = `Do you really want to delete ${ name }?`\n    \n      if (window.confirm(msg) === true) {\n          personService\n              .deletePerson(id)\n              .then(deletedPerson => {\n                setNotificationMessage({\n                  \"text\": `${ name } was removed from server`,\n                  \"type\": \"error\"\n              })\n              setTimeout(() => {\n                  setNotificationMessage(null)\n              }, 5000)\n\n                  setPersons(persons.filter(person => person.id !== id))\n              })\n              .catch(error => {\n                  setNotificationMessage({\n                  \"text\": `${ name } was already removed from server`,\n                  \"type\": \"error\"\n              })\n              setTimeout(() => {\n                  setNotificationMessage(null)\n              }, 5000)\n\n                  setPersons(persons.filter(person => person.id !== id))\n              })\n      }\n    }\n\n    const findPerson = ()=>{\n      const name = newName\n      return persons.some(person => person.name.toLowerCase() === name.toLowerCase())\n  }\n  const duplicateContact = persons.find(p => p.name === newName);\n  \n  \n  const addEntry = (event) => {\n      event.preventDefault()\n      if( duplicateContact ) {\n           const msg =  `${ duplicateContact.name } is already added to phonebook, replace the old number with a new one?`\n  \n          if (window.confirm(msg) === true) {\n              personService\n                  .update(duplicateContact.id, {name: newName, number: newNumber})\n                  .then(updatedPerson => {\n  \n                    setNotificationMessage({\n                      \"text\": ` ${ duplicateContact.name }'s number is now updated`,\n                      \"type\": \"notification\"\n                  })\n    \n                  setTimeout(() => {\n                      setNotificationMessage(null)\n                  }, 5000)\n                      setPersons(persons.map(person => person.id !== updatedPerson.id ? person : updatedPerson))\n                      setNewName('')\n                      setNewNumber('')\n                  })\n                  .catch(error => {\n                    setNotificationMessage({\n                      \"text\": `${error.response.data.error}`,\n                      \"type\": \"error\"\n                  })\n    \n                  setTimeout(() => {\n                      setNotificationMessage(null)\n                  }, 5000)\n                        \n                  })\n          }\n      }\n  \n      else if(newName.length > 0 && newNumber.length > 0 ){\n  \n        personService\n        .create({name: newName, number: newNumber})\n        .then(returnedPerson => {\n          \n          setNotificationMessage({\n            text: `${ returnedPerson.name } is now in your phonebook`,\n            type: \"notification\"\n        })\n  \n        setTimeout(() => {\n            setNotificationMessage(null)\n        }, 5000)\n  \n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          \n           \n  \n        }).catch(error => \n          {\n            setNotificationMessage({\n              \"text\": ` ${error.response.data.error}`,\n              \"type\": \"error\"\n          })\n\n          setTimeout(() => {\n              setNotificationMessage(null)\n          }, 5000)}\n              \n          // console.log(error.response.data)\n        )\n  \n      }\n      else{\n          alert(\"please complete the name and the number field\")\n      }\n  \n     \n  }\n  \n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  \n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n    \n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      { notificationMessage !== null ? <Notification message={ notificationMessage } /> : null }\n\n     <Filter handleFilter={handleFilter} />\n\n      <h2>add a new</h2>\n    <PersonForm\n      addEntry={addEntry}\n      newName={newName}\n      handleNameChange={handleNameChange}\n      newNumber={newNumber} \n      handleNumberChange={handleNumberChange}\n    />\n\n      <h2>Numbers</h2>\n      <Persons newFilter={newFilter} persons={persons} deleteContact={deleteContact}/>  \n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}